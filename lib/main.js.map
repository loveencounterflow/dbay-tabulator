{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,YAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;;EAgBA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,GAAF,CAAA,GAA4B,GAAG,CAAC,GAAhC;;EACA,CAAA,CAAE,IAAF,CAAA,GAA4B,OAAA,CAAQ,MAAR,CAA5B;;EACA,CAAA,CAAE,YAAF,CAAA,GAA4B,OAAA,CAAQ,gBAAR,CAA5B,EAnBA;;;EAwBM,IAAC,CAAA,YAAP,MAAA,UAAA,QAAyB,YAAA,CAAA,EAAzB,CAAA;;IAGE,OAAS,CAAE,GAAF,CAAA;AACX,UAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,kBAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA;MAAI,GAAA,GAAY,CAAE,GAAA,IAAC,CAAA,QAAQ,CAAC,eAAZ,EAAgC,GAAA,GAAhC;MACZ,IAAC,CAAA,KAAK,CAAC,QAAQ,CAAC,eAAhB,CAAgC,GAAhC;MACA,CAAA,CAAE,IAAF,CAAA,GAAY,GAAZ;MACA,MAAA,GAAY,IAAC,CAAA,gBAAD,CAAkB,GAAlB;MACZ,IAAA,GAAY;MACZ,CAAA,GAAY;MACZ,MAAA,GAAY;MACZ,OAAA,GAAY,MAPhB;;MASI,kBAAA,GAAqB,CAAE,MAAM,IAAR,CAAA,GAAA;AACzB,YAAA,KAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA;QAAM,OAAA,GAAU;QACV,IAAA,GAAU,IAAC,CAAA,8BAAD,CAAgC,GAAG,CAAC,IAApC,EAA0C,GAA1C,EAA+C,MAA/C;QACV,IAAU,IAAI,CAAC,MAAL,KAAe,CAAzB;AAAA,iBAAA;;QACA,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,IAAL,CAAU,IAAV,CAAP;QACA,KAAA,sCAAA;;UACE,IAAG,6BAAH;YACE,IAAY,KAAK,CAAC,OAAN,KAAiB,KAA7B;AAAA,uBAAA;;YACA,KAAA,uCAAsB,IAFxB;WAAA,MAAA;YAIE,KAAA,GAAQ,IAJV;;UAKA,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB;YAAE,KAAA,EAAO;UAAT,CAAhB,EAAiC,IAAI,CAAC,IAAL,CAAU,KAAV,CAAjC,CAAP;QANF;QAOA,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,KAAL,CAAW,IAAX,CAAP;AACA,eAAO;MAbY,EATzB;;MAwBI,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,IAAL,CAAU,OAAV,EAAsB,iBAAH,GAAmB;QAAE,KAAA,EAAO,GAAG,CAAC;MAAb,CAAnB,GAA8C,IAAjE,CAAP,EAxBJ;;MA0BI,KAAA,WAAA;QACE,MAAA;QACA,IAA0B,MAAA,KAAU,CAApC;UAAA,kBAAA,CAAmB,GAAnB,EAAA;SADN;;QAGM,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,IAAL,CAAU,IAAV,CAAP;QACA,KAAA,sCAAA;;UACE,KAAA,uCAAwB;UACxB,IAAgB,4DAAhB;AAAA,qBAAA;WADR;;UAGQ,CAAA,GAAQ,CAAE,GAAF,EAAO,MAAP,EAAe,GAAf,EAAoB,KAApB;UACR,CAAA,GAAQ,IAAC,CAAA,UAAD,CAAY,GAAZ,EAAiB,GAAjB,EAAsB,KAAtB,EAA6B,GAA7B,EAAkC,CAAlC;UACR,CAAC,CAAC,IAAF,CAAO,IAAC,CAAA,gBAAD,CAAkB,CAAlB,CAAP;QANF,CAJN;;QAYM,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,KAAL,CAAW,IAAX,CAAP;MAbF;MAeA,KAA+B,OAA/B;;QAAA,kBAAA,CAAmB,IAAnB,EAAA;;MACA,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,KAAL,CAAW,OAAX,CAAP;AACA,aAAO,CAAC,CAAC,IAAF,CAAO,IAAP;IA5CA,CADX;;;IAgDE,oBAAsB,CAAE,GAAF,CAAA;AACxB,UAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,MAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA;MAAI,GAAA,GAAU,CAAE,GAAA,IAAC,CAAA,QAAQ,CAAC,4BAAZ,EAA6C,GAAA,GAA7C;MACV,IAAC,CAAA,KAAK,CAAC,QAAQ,CAAC,4BAAhB,CAA6C,GAA7C;MACA,GAAA,GAAa,CAAE,IAAC,CAAA,KAAK,CAAC,GAAG,CAAC,MAAX,CAAkB,GAAG,CAAC,GAAtB,CAAF,CAAH,GAAsC,GAAG,CAAC,GAA1C,GAAmD,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,GAAf;MAC7D,MAAA,GAAU,IAAC,CAAA,gBAAD,CAAkB,GAAlB;MACV,IAAA,GAAU,IAAC,CAAA,8BAAD,CAAgC,GAAG,CAAC,IAApC,EAA0C,GAA1C,EAA+C,MAA/C;MACV,CAAA,GAAU;MACV,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,IAAL,CAAU,OAAV,EAAsB,iBAAH,GAAmB;QAAE,KAAA,EAAO,GAAG,CAAC;MAAb,CAAnB,GAA8C,IAAjE,CAAP;MACA,KAAA,sCAAA;;QACE,KAAA,GAAc,MAAM,CAAE,GAAF;QACpB,IAAgB,4DAAhB;AAAA,mBAAA;;QACA,CAAA,GAAQ,CAAE,GAAF,EAAO,GAAP,EAAY,KAAZ;QACR,CAAA,GAAQ,IAAC,CAAA,UAAD,CAAY,GAAZ,EAAiB,GAAjB,EAAsB,KAAtB,EAA6B,GAA7B,EAAkC,CAAlC,EAHd;;QAKM,KAAA,GAAQ,GAAG,CAAE,GAAF;QACX,EAAA,GAAQ,IAAC,CAAA,gBAAD,CAAkB,CAAlB;QACR,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,CAAE,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,IAAI,CAAC,IAAL,CAAU,KAAV,CAAhB,CAAF,CAAA,GAAsC,EAAtD,CAAP;MARF;MASA,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,KAAL,CAAW,OAAX,CAAP;AACA,aAAO,CAAC,CAAC,IAAF,CAAO,IAAP;IAlBa,CAhDxB;;;IAqEE,gBAAkB,CAAE,GAAF,CAAA;AACpB,UAAA,CAAA,EAAA,GAAA,EAAA;MAAI,CAAA,GAAI,CAAE,GAAA,GAAG,CAAC,MAAN;MACJ,KAAA,QAAA;;QACE,IAAkB,KAAA,KAAS,IAA3B;UAAA,KAAA,GAAY,CAAA,EAAZ;;QACA,CAAC,CAAE,GAAF,CAAD,GAAY,CAAE,GAAA,IAAC,CAAA,QAAQ,CAAC,4BAAZ,EAA6C,GAAA,KAA7C;MAFd;AAGA,aAAO;IALS,CArEpB;;;IA6EE,8BAAgC,CAAE,IAAF,EAAQ,GAAR,EAAa,MAAb,CAAA;AAC9B,aAAO,MAAM,CAAC,IAAP;AAAY,gBAAO,IAAP;AAAA,eACZ,SADY;mBACI,CAAE,GAAA,GAAF,EAAU,GAAA,MAAV;AADJ,eAEZ,SAFY;mBAEI,CAAE,GAAA,MAAF,EAAa,GAAA,GAAb;AAFJ,eAGZ,KAHY;mBAGI;AAHJ,eAIZ,KAJY;mBAII;AAJJ;UAAZ;IADuB,CA7ElC;;;IAqFE,yBAA2B,CAAE,KAAF,EAAS,GAAT,CAAA;AAC7B,UAAA;MAAI,IAAG,aAAH;QACE,IAAe,KAAK,CAAC,OAAN,KAAiB,KAAhC;AAAA,iBAAO,KAAP;;AACA,mDAAqB,IAFvB;;AAGA,aAAO;IAJkB,CArF7B;;;IA4FE,UAAY,CAAE,GAAF,EAAO,GAAP,EAAY,KAAZ,EAAmB,GAAnB,EAAwB,CAAxB,CAAA;AACd,UAAA;MAAI,CAAC,CAAC,SAAF,GAAc,GAAG,CAAE,GAAF;MACjB,CAAC,CAAC,KAAF,GAAc,CAAC,CAAC;MAChB,IAAmD,CAAC,CAAC,KAAF,KAAW,MAA9D;QAAA,CAAC,CAAC,KAAF,oEAAiC,GAAG,CAAC,UAArC;;AACA,aAAO;IAJG,CA5Fd;;;IAmGE,gBAAkB,CAAE,CAAF,CAAA;AACpB,UAAA,GAAA,EAAA;MAAI,IAAG,2DAAH;AACE,eAAO,CAAC,CAAC,KAAK,CAAC,UAAR,CAAmB,CAAC,CAAC,KAArB,EAA4B,CAA5B,EADT;OAAA,MAEK,IAAG,6DAAH;AACH,eAAO,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB;UAAE,KAAA,EAAO,CAAC,CAAC;QAAX,CAAhB,EAAmC,CAAC,CAAC,KAAK,CAAC,UAAR,CAAmB,CAAC,CAAC,KAArB,EAA4B,CAA5B,CAAnC,EADJ;;MAEL,KAA6B,IAAC,CAAA,KAAK,CAAC,GAAG,CAAC,IAAX,CAAgB,CAAC,CAAC,KAAlB,CAA7B;QAAA,CAAC,CAAC,KAAF,GAAU,GAAA,CAAI,CAAC,CAAC,KAAN,EAAV;;AACA,aAAO,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB;QAAE,KAAA,EAAO,CAAC,CAAC;MAAX,CAAhB,EAAmC,IAAI,CAAC,IAAL,CAAU,CAAC,CAAC,KAAZ,CAAnC;IANS;;EArGpB,EAxBA;;;EAuIA,IAAC,CAAA,SAAD,GAAa,IAAI,IAAC,CAAA,SAAL,CAAA;AAvIb",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-TABULATOR'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n# PATH                      = require 'path'\nGUY                       = require 'guy'\n{ SQL }                   = GUY.str\n{ HDML }                  = require 'hdml'\n{ Common_mixin }          = require './common-mixin'\n\n\n\n#===========================================================================================================\nclass @Tabulator extends Common_mixin()\n\n  #---------------------------------------------------------------------------------------------------------\n  as_html: ( cfg ) ->\n    cfg       = { @defaults.vgt_as_html_cfg..., cfg..., }\n    @types.validate.vgt_as_html_cfg cfg\n    { rows }  = cfg\n    fields    = @_fields_from_cfg cfg\n    keys      = null\n    R         = []\n    row_nr    = 0\n    has_ths   = false\n    #.......................................................................................................\n    push_table_headers = ( row = null ) =>\n      has_ths = true\n      keys    = @_keys_from_keys_row_and_fields cfg.keys, row, fields\n      return if keys.length is 0\n      R.push HDML.open 'tr'\n      for key in keys\n        if ( field = fields[ key ] )?\n          continue if field.display is false\n          title = field.title ? key\n        else\n          title = key\n        R.push HDML.pair 'th', { class: key, }, HDML.text title\n      R.push HDML.close 'tr'\n      return null\n    #.......................................................................................................\n    R.push HDML.open 'table', if cfg.class? then { class: cfg.class, } else null\n    #.......................................................................................................\n    for row from rows\n      row_nr++\n      push_table_headers row if row_nr is 1\n      #.....................................................................................................\n      R.push HDML.open 'tr'\n      for key in keys\n        field = fields[ key ] ? null\n        continue unless ( title = @_title_from_field_and_key field, key )?\n        #...................................................................................................\n        d     = { key, row_nr, row, field, }\n        d     = @_set_value cfg, row, field, key, d\n        R.push @_td_from_details d\n      #.....................................................................................................\n      R.push HDML.close 'tr'\n    #.......................................................................................................\n    push_table_headers null unless has_ths\n    R.push HDML.close 'table'\n    return R.join '\\n'\n\n  #---------------------------------------------------------------------------------------------------------\n  row_as_subtable_html: ( cfg ) ->\n    cfg     = { @defaults.vgt_row_as_subtable_html_cfg..., cfg..., }\n    @types.validate.vgt_row_as_subtable_html_cfg cfg\n    row     = if ( @types.isa.object cfg.row ) then cfg.row else JSON.parse cfg.row\n    fields  = @_fields_from_cfg cfg\n    keys    = @_keys_from_keys_row_and_fields cfg.keys, row, fields\n    R       = []\n    R.push HDML.open 'table', if cfg.class? then { class: cfg.class, } else null\n    for key in keys\n      field       = fields[ key ]\n      continue unless ( title = @_title_from_field_and_key field, key )?\n      d     = { key, row, field, }\n      d     = @_set_value cfg, row, field, key, d\n      #.....................................................................................................\n      value = row[ key ]\n      td    = @_td_from_details d\n      R.push HDML.pair 'tr', ( HDML.pair 'th', HDML.text title ) + td\n    R.push HDML.close 'table'\n    return R.join '\\n'\n\n  #---------------------------------------------------------------------------------------------------------\n  _fields_from_cfg: ( cfg ) ->\n    R = { cfg.fields..., }\n    for key, value of R\n      value     = {} if value is true\n      R[ key ]  = { @defaults.vgt_field_description_object..., value..., }\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  _keys_from_keys_row_and_fields: ( keys, row, fields ) ->\n    return Object.keys switch keys\n      when 'row,cfg'  then { row..., fields..., }\n      when 'cfg,row'  then { fields..., row..., }\n      when 'row'      then row\n      when 'cfg'      then fields\n\n  #---------------------------------------------------------------------------------------------------------\n  _title_from_field_and_key: ( field, key ) ->\n    if field?\n      return null if field.display is false\n      return field.title ? key\n    return key\n\n  #---------------------------------------------------------------------------------------------------------\n  _set_value: ( cfg, row, field, key, d ) ->\n    d.raw_value = row[ key ]\n    d.value     = d.raw_value\n    d.value     = field?.undefined ? cfg.undefined  if d.value is undefined\n    return d\n\n  #---------------------------------------------------------------------------------------------------------\n  _td_from_details: ( d ) ->\n    if d.field?.outer_html?\n      return d.field.outer_html d.value, d\n    else if d.field?.inner_html?\n      return HDML.pair 'td', { class: d.key, }, d.field.inner_html d.value, d\n    d.value = rpr d.value unless @types.isa.text d.value\n    return HDML.pair 'td', { class: d.key, }, HDML.text d.value\n\n\n############################################################################################################\n@TABULATOR = new @Tabulator()\n"
  ]
}